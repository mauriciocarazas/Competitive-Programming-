#include <cstring>
#include <iostream>
#include <limits.h>

using namespace std;
int dp[100][100];

int matrixChain_dp(int *p, int i, int j) {
  if (i == j) {
    return 0;
  }
  if (dp[i][j] != -1) {
    return dp[i][j];
  }
  dp[i][j] = INT_MAX;
  for (int k = i; k < j; k++) {
    dp[i][j] =
        min(dp[i][j], matrixChain_dp(p, i, k) + matrixChain_dp(p, k + 1, j) +
                          p[i - 1] * p[k] * p[j]);
  }
  return dp[i][j];
}
int MatrixChainOrder(int *p, int n) {
  int i = 1, j = n - 1;
  return matrixChain_dp(p, i, j);
}

int main() {
  int arr[] = {10, 20, 50, 1, 100};
  int n = sizeof(arr) / sizeof(arr[0]);
  memset(dp, -1, sizeof dp);

  cout << "Minimum number of mult" << MatrixChainOrder(arr, n);
}
